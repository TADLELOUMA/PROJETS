        -:    0:Source:/net/cremi/thdiallo/projet  c technologique/V1/testSEY.c
        -:    0:Graph:/net/cremi/thdiallo/projet  c technologique/V1/CMakeFiles/testSEY.dir/testSEY.c.gcno
        -:    0:Data:/net/cremi/thdiallo/projet  c technologique/V1/CMakeFiles/testSEY.dir/testSEY.c.gcda
        -:    0:Runs:14
        -:    0:Programs:2
        -:    1:#include <stdlib.h>
        -:    2:#include <stdbool.h>
        -:    3:#include <assert.h>
        -:    4:#include <stdio.h>
        -:    5:#include "game.h"
        -:    6:#include"game_io.h"
        -:    7:
        -:    8:
        -:    9:
       14:   10:bool testnewgame(){
       14:   11:	game g = new_game();
       14:   12:   	assert(g);
        -:   13:
       14:   14:	bool res = true;
       70:   15:	for (int i=3; i>=0; i--){
      280:   16:		for(int j=0;j<4;j++){
      224:   17:			if(get_content(g, j, i)!=EMPTY){
    #####:   18:				res = false;
    #####:   19:				fprintf(stderr,("Error newgame didn't work\n"));
    #####:   20:                                delete_game (g);
    #####:   21:				return res;
        -:   22:				}
        -:   23:		}
        -:   24:	}
       14:   25:       delete_game (g);
       14:   26:	return res;
        -:   27:}
        -:   28:
       14:   29:bool test_restart_game(){
       14:   30:   	bool res = true;
       14:   31:	game jeu = new_game();
        -:   32:
       14:   33:   	assert(jeu);
       14:   34:	add_monster(jeu,ZOMBIE,0,1);
       14:   35:	add_monster(jeu,ZOMBIE,1,0);
       14:   36: 	add_monster(jeu,GHOST,2,0);
       14:   37:	add_monster(jeu,GHOST,1,1);
       14:   38:	add_monster(jeu,ZOMBIE,1,2);
       14:   39:	add_monster(jeu,ZOMBIE,2,2);
       14:   40:	add_monster(jeu,ZOMBIE,2,3);
       14:   41:	add_monster(jeu,VAMPIRE,1,3);
       14:   42:	add_monster(jeu,VAMPIRE,3,2);
        -:   43:
       14:   44:        add_mirror(jeu, 1, 0, 3);
       14:   45:        add_mirror(jeu, 0, 3, 3);
       14:   46:        add_mirror(jeu, 1, 0, 2);
       14:   47:        add_mirror(jeu, 1, 2, 1);
       14:   48:        add_mirror(jeu, 0, 3, 1);
       14:   49:        add_mirror(jeu, 1, 0, 0);
       14:   50:        add_mirror(jeu, 1, 3, 0);
        -:   51:
       14:   52:	restart_game(jeu);
        -:   53:
       14:   54:	if(((get_content(jeu, 0, 1) == EMPTY)&& (get_content(jeu, 1, 0) == EMPTY) && (get_content(jeu, 2, 0) == EMPTY) && (get_content(jeu, 1, 1) == EMPTY)&&(get_content(jeu, 1,2 ) == EMPTY) && (get_content(jeu, 2,2 ) == EMPTY) &&(get_content(jeu, 2,3 ) == EMPTY) && (get_content(jeu, 1,3 ) == EMPTY) && (get_content(jeu, 3,2 ) == EMPTY)) && ((get_content(jeu,0,3)==ANTIMIRROR) && (get_content(jeu,3,3)==MIRROR) && (get_content(jeu,0,2)==ANTIMIRROR) &&(get_content(jeu,2,1)==ANTIMIRROR) && (get_content(jeu,3,1)==MIRROR) && (get_content(jeu,0,0)==ANTIMIRROR) && (get_content(jeu,3,0)==ANTIMIRROR))){
       28:   55:	  delete_game (jeu);
       28:   56:           return res;
       14:   57:	}
       14:   58:        delete_game (jeu);
    #####:   59:	fprintf(stderr,("Error restart_game didn't work\n"));
    #####:   60:	return false;
        -:   61:}
        -:   62:
       14:   63:bool test_current_nbmonster(){
       14:   64:	bool res = true;
       14:   65:	game jeu = new_game();
       14:   66:	add_monster(jeu,ZOMBIE,0,1);
       14:   67:	add_monster(jeu,ZOMBIE,1,0);
       14:   68:	if (current_nb_monsters( jeu , ZOMBIE) != 2) {
    #####:   69:		res = false;
    #####:   70:		fprintf(stderr,("Error current_nb_monster didn't work\n"));
    #####:   71:		delete_game (jeu);
    #####:   72:		return res;
        -:   73:	}
       14:   74:	delete_game (jeu);
       14:   75:	return res;
        -:   76:}
        -:   77:
       14:   78:bool test_current_nbseen(){
       14:   79:	bool res = true;
       14:   80:	game jeu = new_game();
       14:   81:	add_mirror(jeu, 1, 0, 3);
       14:   82:     	add_mirror(jeu, 0, 3, 3);
       14:   83:     	add_mirror(jeu, 1, 0, 2);
       14:   84:     	add_mirror(jeu, 1, 2, 1);
       14:   85:     	add_mirror(jeu, 0, 3, 1);
       14:   86:     	add_mirror(jeu, 1, 0, 0);
       14:   87:     	add_mirror(jeu, 1, 3, 0);
        -:   88:
       14:   89:	add_monster(jeu,ZOMBIE,0,1);
       14:   90:	add_monster(jeu,ZOMBIE,1,0);
       14:   91: 	add_monster(jeu,GHOST,2,0);
       14:   92:	add_monster(jeu,GHOST,1,1);
       14:   93:	add_monster(jeu,ZOMBIE,1,2);
       14:   94:	add_monster(jeu,ZOMBIE,2,2);
       14:   95:	add_monster(jeu,ZOMBIE,2,3);
       14:   96:	add_monster(jeu,VAMPIRE,1,3);
       14:   97:	add_monster(jeu,VAMPIRE,3,2);
        -:   98:
       14:   99:	if (current_nb_seen( jeu , N , 1) != 3) {
    #####:  100:		res = false;
    #####:  101:		fprintf(stderr,("Error current_nb_seen didn't work\n"));
    #####:  102:		delete_game (jeu);
    #####:  103:		return res;
        -:  104:	}
       14:  105:	delete_game (jeu);
       14:  106:	return res;
        -:  107:}
        -:  108:
        -:  109:
       14:  110:int main(void){
       14:  111:	bool result = true;
       14:  112:  	result = testnewgame()&& result;
       14:  113:        result = test_restart_game() && result;
       14:  114:	result = test_current_nbmonster() && result;
       14:  115:	result = test_current_nbseen() && result;
       14:  116:  	if(result){
       14:  117:      		printf("Tests successfull\n");
       14:  118:      		return EXIT_SUCCESS;
        -:  119:  	}
        -:  120:  	else{
    #####:  121:      		printf("Tests failed\n");
    #####:  122:      		return EXIT_FAILURE;
        -:  123:  	}
        -:  124:}
